@using SpotMixesBlazor.Shared.ModelsLookup
@inject IJSRuntime _jsRuntime

<div class="col-sm-12 col-md-6 col-lg-4">
    <div class="has-items-overlay playlist">
        <figure>
            <div class="img-wrapper" style="border-radius: 0.428rem;">
                <img src="@Audio.UrlCover" alt="@Audio.Title" style="width: 100%;">
                <div class="img-overlay text-white">
                    <div class="figcaption">
                        <ul class="list-inline d-flex align-items-center justify-content-between">
                            <li class="list-inline-item">
                                <AuthorizeView>
                                    <Authorized>
                                        <ReactionButtonNew AudioId="@Audio.Id"></ReactionButtonNew>
                                    </Authorized>
                                </AuthorizeView>
                            </li>
                            <li class="list-inline-item">
                                <a @onclick="PlayMusic" class="text-center text-white">
                                    <i class="ri-play-line" style="color: white; font-size: 50px"></i>
                                    <p class="m-0 p-0">@Audio.NumReproduction</p>
                                </a>
                            </li>
                            <li class="list-inline-item">
                                <AuthorizeView>
                                    <Authorized>
                                        <a href="#" class="text-center text-white">
                                            <i class="ri-chat-1-line" style="color: white"></i>
                                            <p class="m-0 p-0">2k</p>
                                        </a>
                                    </Authorized>
                                </AuthorizeView>
                            </li>
                        </ul>
                        <div class="text-center mt-6">
                            <h5>@Audio.Title</h5>
                            <span>@Audio.Genres</span>
                        </div>
                    </div>
                </div>
                <div class="figure-title p-2">
                    <div class="d-flex justify-content-start align-items-center mb-1">
                        @if (Audio.User != null)
                        {
                            @foreach (var user in Audio.User)
                            {
                                <!-- avatar -->
                                <div class="avatar me-1">
                                    <img class="round" src="@user.UrlProfilePicture" alt="@user.DisplayName" height="30" width="30"/>
                                </div>
                                <!--/ avatar -->
                                <div>
                                    <h6 class="mb-0">@user.DisplayName</h6>
                                    <small class="text-muted">@Audio.CreatedAt.ToString("g")</small>
                                </div>
                            }
                        }
                    </div>
                    <h5 class="audio-title">@Audio.Title</h5>
                    <span>@Audio.Genres</span>
                </div>
            </div>
        </figure>
    </div>
</div>

@code
{
    [Parameter]
    public AudioLookup Audio { get; set; }

    private async Task PlayMusic()
    {
        await _jsRuntime.InvokeVoidAsync("playMusic", Audio.Title, "Test", Audio.UrlAudio, Audio.UrlCover, true);
    }
}