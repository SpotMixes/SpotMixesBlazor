@using SpotMixesBlazor.Shared.ModelsLookup
@inject HttpClient _httpClient
@inject IJSRuntime _jsRuntime

<div class="card ecommerce-card">
    <div class="card-img">
        <a @onclick="PlayMusic">
            <img class="img-fluid card-img-top width-500" src="@Audio.UrlCover" alt=""/>
        </a>
    </div>

    <div class="card-body">
        <div class="d-flex justify-content-between">
            @if (Audio.User != null)
            {
                @foreach (var user in Audio.User)
                {
                    <a href="">
                        <div class="avatar avatar-sm">
                            <img src="@user.UrlProfilePicture" alt="@user.DisplayName"/>
                        </div>
                        @user.DisplayName
                    </a>
                }
            }
            else
            {
                <p>Anonimo</p>
            }
            <div>
                <p class="h6">
                    <i class="ri-headphone-line"></i>
                    @Audio.NumReproduction
                </p>
            </div>
        </div>
        <h6 class="item-name mt-1">
            <a class="text-body" href="">@Audio.Title</a>
        </h6>
        <div class="d-flex justify-content-between mt-1">
            <p>@Audio.CreatedAt.ToString("g")</p>
            <span class="badge bg-dark h-50">@Audio.Genres</span>
        </div>
    </div>
    <AuthorizeView>
        <Authorized>
            <div class="item-options text-center">
                <ReactionButton Audio="Audio"></ReactionButton>
                <a href="#" class="btn btn-warning btn-cart">
                    <i class="ri-discuss-fill"></i>
                    <span class="add-to-cart">100</span>
                </a>
                <a href="#" class="btn btn-info btn-cart">
                    <i class="ri-share-fill"></i>
                    <span class="add-to-cart">100</span>
                </a>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code
{
    [Parameter]
    public AudioLookup Audio { get; set; }

    private async Task PlayMusic()
    {
        await _jsRuntime.InvokeVoidAsync("playMusic", Audio.Title, "Test", Audio.UrlAudio, Audio.UrlCover, true);
    }
}